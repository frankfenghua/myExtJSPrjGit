/*
 * File: app/view/GUSXmlTreePanel.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.GUSXmlTreePanel', {
    extend: 'Ext.tree.Panel',
    alias: 'widget.gusxmltreepanel',

    id: 'gusxmltreepanel',
    width: 150,
    title: 'GUS XML Tree Panel',
    hideHeaders: true,
    store: 'GUSXmlTreeStore',
    rootVisible:false,
    collapseMode:'mini',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {

            },
            columns: [
                {
                    xtype: 'treecolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return unescape(value);
                    },
                    id: 'treeColumn',
                    dataIndex: 'label',
                    flex: 1
                }
            ]
        });

        me.callParent(arguments);
    }

});